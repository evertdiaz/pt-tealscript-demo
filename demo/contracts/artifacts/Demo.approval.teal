#pragma version 9

// This TEAL was generated by TEALScript v0.59.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// getSum(uint64,uint64)uint64
abi_route_getSum:
	// b: uint64
	txna ApplicationArgs 2
	btoi

	// a: uint64
	txna ApplicationArgs 1
	btoi

	// execute getSum(uint64,uint64)uint64
	callsub getSum
	int 1
	return

getSum:
	proto 2 0

	// contracts/demo.algo.ts:8
	// return a + b;
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	+
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// makeDiff(uint64,uint64)uint64
abi_route_makeDiff:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// b: uint64
	txna ApplicationArgs 2
	btoi

	// a: uint64
	txna ApplicationArgs 1
	btoi

	// execute makeDiff(uint64,uint64)uint64
	callsub makeDiff
	int 1
	return

makeDiff:
	proto 3 0

	// contracts/demo.algo.ts:12
	// result: number = a > b ? a - b : b - a
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	>
	bz ternary1_false
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	-
	b ternary1_end

ternary1_false:
	frame_dig -2 // b: uint64
	frame_dig -1 // a: uint64
	-

ternary1_end:
	frame_bury -3 // result: uint64

	// contracts/demo.algo.ts:13
	// this.diff.value = result
	byte 0x64696666 // "diff"
	frame_dig -3 // result: uint64
	app_global_put

	// contracts/demo.algo.ts:14
	// return result;
	frame_dig -3 // result: uint64
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getDiff()uint64
abi_route_getDiff:
	// execute getDiff()uint64
	callsub getDiff
	int 1
	return

getDiff:
	proto 0 0

	// contracts/demo.algo.ts:18
	// return this.diff.value;
	byte 0x64696666 // "diff"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// createAsa(string)uint64
abi_route_createAsa:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// name: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createAsa(string)uint64
	callsub createAsa
	int 1
	return

createAsa:
	proto 2 0

	// contracts/demo.algo.ts:22
	// asa = sendAssetCreation({
	//       configAssetTotal: 1_000,
	//       configAssetName: name,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/demo.algo.ts:23
	// configAssetTotal: 1_000
	int 1_000
	itxn_field ConfigAssetTotal

	// contracts/demo.algo.ts:24
	// configAssetName: name
	frame_dig -1 // name: bytes
	itxn_field ConfigAssetName

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury -2 // asa: asset

	// contracts/demo.algo.ts:26
	// return asa;
	frame_dig -2 // asa: asset
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "getSum(uint64,uint64)uint64"
	method "makeDiff(uint64,uint64)uint64"
	method "getDiff()uint64"
	method "createAsa(string)uint64"
	txna ApplicationArgs 0
	match abi_route_getSum abi_route_makeDiff abi_route_getDiff abi_route_createAsa
	err